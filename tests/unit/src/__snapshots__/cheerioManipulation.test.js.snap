// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Cheerio Manipulation > Add input values > Adds values into DOM 1`] = `
<div>
  <input value="'1st'" />
  <textarea value="'second'"></textarea>
  <input
    type="number"
    value="3"
  />
  <select value="'b'">
    <option value="a">
      A
    </option>
    <option value="b">
      B
    </option>
  </select>
  <button>
    Set First
  </button>
</div>
`;

exports[`Cheerio Manipulation > Add input values > Does not add values into DOM 1`] = `
<div>
  <input value="1st" />
  <textarea></textarea>
  <input
    type="number"
    value="3"
  />
  <select>
    <option value="a">
      A
    </option>
    <option value="b">
      B
    </option>
  </select>
  <button>
    Set First
  </button>
</div>
`;

exports[`Cheerio Manipulation > InlineFunctions.vue > Functions kept 1`] = `
<div>
  <h1 title="function () { return true; }">
    Classic
  </h1>
  <h2 title="function named () {
        return true;
      }">
    Multi-line
  </h2>
  <h3 title="(x) => !x">
    Arrow 1
  </h3>
  <h3 title="x => !x">
    Arrow 2
  </h3>
  <h3 title="() => true">
    Arrow 3
  </h3>
  <h3 title="(x, y) => { return x + y; }">
    Arrow 4
  </h3>
  <h4 title="function () { [native code] }">
    Reference
  </h4>
  <h5 title="2">
    Run
  </h5>
  <h6 title="function (a word used in programming) is typically followed by curly braces, ie {}">
    Red herring
  </h6>
  <div>
    <pre>        function notInAnAttribute (a, b, c) {
          const d = a * c;
          const e = d - b;
          return e;
        }
      </pre>
  </div>
  <div title="this is what a it looks like function () {}">
    Attribute does not start with function.
  </div>
  <div title="function () {} is what it looks like">
    Attribute does not end with }.
  </div>
  <p title="function () { [native code] },function () { [native code] }">
    In array
  </p>
  <footer title="function () {
        return () => ({});
      }">
    Default function in a prop
  </footer>
</div>
`;

exports[`Cheerio Manipulation > InlineFunctions.vue > Functions removed 1`] = `
<div>
  <h1 title="[function]">
    Classic
  </h1>
  <h2 title="[function]">
    Multi-line
  </h2>
  <h3 title="[function]">
    Arrow 1
  </h3>
  <h3 title="[function]">
    Arrow 2
  </h3>
  <h3 title="[function]">
    Arrow 3
  </h3>
  <h3 title="[function]">
    Arrow 4
  </h3>
  <h4 title="[function]">
    Reference
  </h4>
  <h5 title="2">
    Run
  </h5>
  <h6 title="function (a word used in programming) is typically followed by curly braces, ie {}">
    Red herring
  </h6>
  <div>
    <pre>        function notInAnAttribute (a, b, c) {
          const d = a * c;
          const e = d - b;
          return e;
        }
      </pre>
  </div>
  <div title="this is what a it looks like function () {}">
    Attribute does not start with function.
  </div>
  <div title="function () {} is what it looks like">
    Attribute does not end with }.
  </div>
  <p title="[function]">
    In array
  </p>
  <footer title="[function]">
    Default function in a prop
  </footer>
</div>
`;

exports[`Cheerio Manipulation > SortAttributes.vue > Sorted 1`] = `
<div>
  <h1
    class="meow nyan"
    id="kitten"
    title="cat"
  >
    fluffy
  </h1>
  <h2
    asdf="qwer"
    class=""
    id="kitten2"
  >
    mittens
  </h2>
  <h3
    asdf=""
    id=""
  >
    scruffy
  </h3>
</div>
`;

exports[`Cheerio Manipulation > SortAttributes.vue > Unsorted 1`] = `
<div>
  <h1
    id="kitten"
    class="meow nyan"
    title="cat"
  >
    fluffy
  </h1>
  <h2
    id="kitten2"
    class=""
    asdf="qwer"
  >
    mittens
  </h2>
  <h3
    id=""
    asdf=""
  >
    scruffy
  </h3>
</div>
`;

exports[`Cheerio Manipulation > Stringify attributes > Does not stringify attributes 1`] = `
<div>
  <h1 title="[object Object]">
    Te
    <s>
      xt
    </s>
  </h1>
</div>
<p title="plain text">
  <strong title="22">
    Text
  </strong>
</p>
<h2 title="[object Object]">
  Words
</h2>
<div title="() => { return 5; }">
  <span title="true,2,string">
    <em>
      Some
    </em>
    stuff.
  </span>
</div>
<div title="[object Object]">
  {
  "name": "bob"
  }
</div>
`;

exports[`Cheerio Manipulation > Stringify attributes > Replaces attribute values including child components 1`] = `
<div>
  <h1 title="{x:'asdf'}">
    Te
    <s>
      xt
    </s>
  </h1>
</div>
<p title="plain text">
  <strong title="22">
    Text
  </strong>
</p>
<h2 title="{y:2}">
  Words
</h2>
<div title="Function">
  <span title="[true,2,'string']">
    <em>
      Some
    </em>
    stuff.
  </span>
</div>
<div title="{name:'bob'}">
  {
  "name": "bob"
  }
</div>
`;

exports[`Cheerio Manipulation > Stringify attributes > Replaces attribute values with stubbed child component 1`] = `
<div>
  <h1 title="{x:'asdf'}">
    Te
    <s>
      xt
    </s>
  </h1>
</div>
<p title="plain text">
  <strong title="22">
    Text
  </strong>
</p>
<h2 title="{y:2}">
  Words
</h2>
<div title="Function">
  <span title="[true,2,'string']">
    <em>
      Some
    </em>
    stuff.
  </span>
</div>
<span person="{name:'bob'}"></span>
`;

exports[`Cheerio Manipulation > Stringify attributes > Replaces prop values on children in shallow mounts 1`] = `
<div>
  <h1 title="{x:'asdf'}">
    Te
    <s>
      xt
    </s>
  </h1>
</div>
<p title="plain text">
  <strong title="22">
    Text
  </strong>
</p>
<h2 title="{y:2}">
  Words
</h2>
<div title="Function">
  <span title="[true,2,'string']">
    <em>
      Some
    </em>
    stuff.
  </span>
</div>
<stringify-props-stub person="{name:'bob'}"></stringify-props-stub>
`;
